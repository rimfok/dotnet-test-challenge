//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MobileLife.CurrencyRates.IntegrationTest.CurrencyRatesProxy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCurrencyRateRequest", Namespace="http://schemas.datacontract.org/2004/07/MobileLife.CurrencyRates.Api.Dto")]
    [System.SerializableAttribute()]
    public partial class GetCurrencyRateRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DayField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Day {
            get {
                return this.DayField;
            }
            set {
                if ((this.DayField.Equals(value) != true)) {
                    this.DayField = value;
                    this.RaisePropertyChanged("Day");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CurrencyRatesBaseResponse", Namespace="http://schemas.datacontract.org/2004/07/MobileLife.CurrencyRates.Api.Dto")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MobileLife.CurrencyRates.IntegrationTest.CurrencyRatesProxy.ListCurrencyRatesResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MobileLife.CurrencyRates.IntegrationTest.CurrencyRatesProxy.GetCurrencyRateResponse))]
    public partial class CurrencyRatesBaseResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MobileLife.CurrencyRates.IntegrationTest.CurrencyRatesProxy.ResponseCode ResponseCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MobileLife.CurrencyRates.IntegrationTest.CurrencyRatesProxy.ResponseCode ResponseCode {
            get {
                return this.ResponseCodeField;
            }
            set {
                if ((this.ResponseCodeField.Equals(value) != true)) {
                    this.ResponseCodeField = value;
                    this.RaisePropertyChanged("ResponseCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListCurrencyRatesResponse", Namespace="http://schemas.datacontract.org/2004/07/MobileLife.CurrencyRates.Api.Dto")]
    [System.SerializableAttribute()]
    public partial class ListCurrencyRatesResponse : MobileLife.CurrencyRates.IntegrationTest.CurrencyRatesProxy.CurrencyRatesBaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<MobileLife.CurrencyRates.IntegrationTest.CurrencyRatesProxy.CurrencyRate> CurrencyRatesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<MobileLife.CurrencyRates.IntegrationTest.CurrencyRatesProxy.CurrencyRate> CurrencyRates {
            get {
                return this.CurrencyRatesField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyRatesField, value) != true)) {
                    this.CurrencyRatesField = value;
                    this.RaisePropertyChanged("CurrencyRates");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCurrencyRateResponse", Namespace="http://schemas.datacontract.org/2004/07/MobileLife.CurrencyRates.Api.Dto")]
    [System.SerializableAttribute()]
    public partial class GetCurrencyRateResponse : MobileLife.CurrencyRates.IntegrationTest.CurrencyRatesProxy.CurrencyRatesBaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> RateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Rate {
            get {
                return this.RateField;
            }
            set {
                if ((this.RateField.Equals(value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseCode", Namespace="http://schemas.datacontract.org/2004/07/MobileLife.CurrencyRates.Api.Enums")]
    public enum ResponseCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute(Value="200")]
        _200 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute(Value="404")]
        _404 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute(Value="500")]
        _500 = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CurrencyRate", Namespace="http://schemas.datacontract.org/2004/07/MobileLife.CurrencyRates.Api.Dto")]
    [System.SerializableAttribute()]
    public partial class CurrencyRate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetCurrencyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseCurrency {
            get {
                return this.BaseCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseCurrencyField, value) != true)) {
                    this.BaseCurrencyField = value;
                    this.RaisePropertyChanged("BaseCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Day {
            get {
                return this.DayField;
            }
            set {
                if ((object.ReferenceEquals(this.DayField, value) != true)) {
                    this.DayField = value;
                    this.RaisePropertyChanged("Day");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rate {
            get {
                return this.RateField;
            }
            set {
                if ((this.RateField.Equals(value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetCurrency {
            get {
                return this.TargetCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetCurrencyField, value) != true)) {
                    this.TargetCurrencyField = value;
                    this.RaisePropertyChanged("TargetCurrency");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListStoredCurrencyRatesRequest", Namespace="http://schemas.datacontract.org/2004/07/MobileLife.CurrencyRates.Api.Dto")]
    [System.SerializableAttribute()]
    public partial class ListStoredCurrencyRatesRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StartId {
            get {
                return this.StartIdField;
            }
            set {
                if ((this.StartIdField.Equals(value) != true)) {
                    this.StartIdField = value;
                    this.RaisePropertyChanged("StartId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CurrencyRatesProxy.ICurrencyRatesApiService")]
    public interface ICurrencyRatesApiService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrencyRatesApiService/GetEuroCurrencyRate", ReplyAction="http://tempuri.org/ICurrencyRatesApiService/GetEuroCurrencyRateResponse")]
        MobileLife.CurrencyRates.IntegrationTest.CurrencyRatesProxy.GetCurrencyRateResponse GetEuroCurrencyRate(MobileLife.CurrencyRates.IntegrationTest.CurrencyRatesProxy.GetCurrencyRateRequest currencyRateRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrencyRatesApiService/GetEuroCurrencyRate", ReplyAction="http://tempuri.org/ICurrencyRatesApiService/GetEuroCurrencyRateResponse")]
        System.Threading.Tasks.Task<MobileLife.CurrencyRates.IntegrationTest.CurrencyRatesProxy.GetCurrencyRateResponse> GetEuroCurrencyRateAsync(MobileLife.CurrencyRates.IntegrationTest.CurrencyRatesProxy.GetCurrencyRateRequest currencyRateRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrencyRatesApiService/ListStoredCurrencyRates", ReplyAction="http://tempuri.org/ICurrencyRatesApiService/ListStoredCurrencyRatesResponse")]
        MobileLife.CurrencyRates.IntegrationTest.CurrencyRatesProxy.ListCurrencyRatesResponse ListStoredCurrencyRates(MobileLife.CurrencyRates.IntegrationTest.CurrencyRatesProxy.ListStoredCurrencyRatesRequest currencyRatesRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrencyRatesApiService/ListStoredCurrencyRates", ReplyAction="http://tempuri.org/ICurrencyRatesApiService/ListStoredCurrencyRatesResponse")]
        System.Threading.Tasks.Task<MobileLife.CurrencyRates.IntegrationTest.CurrencyRatesProxy.ListCurrencyRatesResponse> ListStoredCurrencyRatesAsync(MobileLife.CurrencyRates.IntegrationTest.CurrencyRatesProxy.ListStoredCurrencyRatesRequest currencyRatesRequest);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICurrencyRatesApiServiceChannel : MobileLife.CurrencyRates.IntegrationTest.CurrencyRatesProxy.ICurrencyRatesApiService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CurrencyRatesApiServiceClient : System.ServiceModel.ClientBase<MobileLife.CurrencyRates.IntegrationTest.CurrencyRatesProxy.ICurrencyRatesApiService>, MobileLife.CurrencyRates.IntegrationTest.CurrencyRatesProxy.ICurrencyRatesApiService {
        
        public CurrencyRatesApiServiceClient() {
        }
        
        public CurrencyRatesApiServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CurrencyRatesApiServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CurrencyRatesApiServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CurrencyRatesApiServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MobileLife.CurrencyRates.IntegrationTest.CurrencyRatesProxy.GetCurrencyRateResponse GetEuroCurrencyRate(MobileLife.CurrencyRates.IntegrationTest.CurrencyRatesProxy.GetCurrencyRateRequest currencyRateRequest) {
            return base.Channel.GetEuroCurrencyRate(currencyRateRequest);
        }
        
        public System.Threading.Tasks.Task<MobileLife.CurrencyRates.IntegrationTest.CurrencyRatesProxy.GetCurrencyRateResponse> GetEuroCurrencyRateAsync(MobileLife.CurrencyRates.IntegrationTest.CurrencyRatesProxy.GetCurrencyRateRequest currencyRateRequest) {
            return base.Channel.GetEuroCurrencyRateAsync(currencyRateRequest);
        }
        
        public MobileLife.CurrencyRates.IntegrationTest.CurrencyRatesProxy.ListCurrencyRatesResponse ListStoredCurrencyRates(MobileLife.CurrencyRates.IntegrationTest.CurrencyRatesProxy.ListStoredCurrencyRatesRequest currencyRatesRequest) {
            return base.Channel.ListStoredCurrencyRates(currencyRatesRequest);
        }
        
        public System.Threading.Tasks.Task<MobileLife.CurrencyRates.IntegrationTest.CurrencyRatesProxy.ListCurrencyRatesResponse> ListStoredCurrencyRatesAsync(MobileLife.CurrencyRates.IntegrationTest.CurrencyRatesProxy.ListStoredCurrencyRatesRequest currencyRatesRequest) {
            return base.Channel.ListStoredCurrencyRatesAsync(currencyRatesRequest);
        }
    }
}
